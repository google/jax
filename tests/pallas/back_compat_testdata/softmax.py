# Copyright 2023 The JAX Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import datetime
from numpy import array, float16


# Pasted from the test output (see back_compat_test_util.py module docstring)
data_2023_09_03 = dict(
    testdata_version=1,
    platform='cuda',
    custom_call_targets=['triton_kernel_call'],
    serialized_date=datetime.date(2023, 9, 3),
    inputs=(array([[ 0.,  1.,  2.,  3.],
       [ 4.,  5.,  6.,  7.],
       [ 8.,  9., 10., 11.],
       [12., 13., 14., 15.],
       [16., 17., 18., 19.],
       [20., 21., 22., 23.],
       [24., 25., 26., 27.],
       [28., 29., 30., 31.]], dtype=float16),),
    expected_outputs=(array([[0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ],
       [0.03204, 0.08716, 0.2369 , 0.644  ]], dtype=float16),),
    mlir_module_text=r"""
#loc1 = loc("x")
#loc2 = loc("third_party/py/jax/tests/pallas/pallas_triton_back_compat_test.py":49:0)
#loc3 = loc("jit(f)/jit(main)/pjit[in_shardings=(UnspecifiedValue,) out_shardings=(UnspecifiedValue,) resource_env=None donated_invars=(False,) name=softmax keep_unused=False inline=False]"(#loc2))
#loc4 = loc("jit(f)/jit(main)/jit(softmax)/pjit[in_shardings=(UnspecifiedValue,) out_shardings=(UnspecifiedValue,) resource_env=None donated_invars=(False,) name=wrapped keep_unused=False inline=False]"(#loc2))
module @jit_f attributes {jax.uses_shape_polymorphism = false, mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<8x4xf16> {mhlo.sharding = "{replicated}"} loc("x")) -> (tensor<8x4xf16> {jax.result_info = ""}) {
    %0 = call @softmax(%arg0) : (tensor<8x4xf16>) -> tensor<8x4xf16> loc(#loc3)
    return %0 : tensor<8x4xf16> loc(#loc)
  } loc(#loc)
  func.func private @softmax(%arg0: tensor<8x4xf16> loc("jit(f)/jit(main)/pjit[in_shardings=(UnspecifiedValue,) out_shardings=(UnspecifiedValue,) resource_env=None donated_invars=(False,) name=softmax keep_unused=False inline=False]"(#loc2))) -> tensor<8x4xf16> {
    %0 = call @wrapped(%arg0) : (tensor<8x4xf16>) -> tensor<8x4xf16> loc(#loc4)
    return %0 : tensor<8x4xf16> loc(#loc3)
  } loc(#loc3)
  func.func private @wrapped(%arg0: tensor<8x4xf16> loc("jit(f)/jit(main)/jit(softmax)/pjit[in_shardings=(UnspecifiedValue,) out_shardings=(UnspecifiedValue,) resource_env=None donated_invars=(False,) name=wrapped keep_unused=False inline=False]"(#loc2))) -> tensor<8x4xf16> {
    %0 = stablehlo.custom_call @triton_kernel_call(%arg0) {api_version = 2 : i32, backend_config = "x\9C\BDY\DD\8E\DB\C6\15F\0A_DD/|\99\8B\14\98\18]`7\95i\CE\90\12\C9\8D\BAp\0C\D4\BDq\83^\04F\81 %Hq(\13\A1(\85\1Cm\B5Y,\D0\8B<G\DE\A4/\91'\EA93Cj\F8g\ED\02A\0C\83\BB<\BF\DF\F9\E6\CC\9C\A1m\FD\1AZ\FF\0B\AD?&\B1X\7F\E0i\94\1D\CA\F5\F3g\9F\FD\F7\D9\8B\9F\FF\F4\EA\95\F5\EA\15\F9;/y\15\0B\9E\92\E4\8E\BC{\F7\FE\1F\E4\9B\F7\FF\FC\F6_\E4M\BC\FE\E1\E5\DF\CA\14l,\CB\BE\E5U\9D\EFJ\12\D8\D4\B2E\\m\B8 \F56\F2\1D\CB\8E\D3\B4\E2u\1D\D5\F9O\9C,=\CB\9AAT{S\EC\92bf\A6\B5l~\14\BC*\89]\7F\88+\C8g\C7E\BE)\09%v\12\10\B4\8F\8B\A8\DE\F2\EDw\DF\7F\85\19\F3:O\0ANl^\8A\EA\8E\98\91.\AD\99\BD\8F\ABxK\EC\C3\D2\EB\A8\22)\8F\9C\F9Y\13j]Y\F66>\96\22O\09e\C1\9CP\F8k\DD\83c\C57\C4\DE#\C4\D9\C5~E\9D\9B\AF\1AaB\97 \AB\EA\15\F5\0D\A1\CBP\B8b\EEI\96IY\B6\0A\0D3\C0\01f\E9\8A\A2\DD\9F\DFE\0AM\C27y\E9\\\03mE\AA K\C4h\E9\CE\C9wc\C5\01?Cco\DC\98\A2\F1vwk\1F\14J\0A\85^@\C9\F6\11\E4q\99J\F4R\11\82B\AA\DD\AE\07s@\B1\16\B1\F6\A9?\14M\C5\8C\A2\0B\EA\19\BA\1C\0A\FB?y\CA\EDZi\D3\85\D4R\A5\85.\B1k\0Du\89\0A\AC\0E\8DLO\9D1\F5%\94p\E8)\13j\7F\BF\81\A9\D7\84\CD\C9K\EA0O\8B\9B\F5\A3(6L\C1\12D\CE\D1\01\D9kP\13`R5\9F\\\DD{i@\1E\80MLB\C9_\88C\90\C3\D7_\A0q7\0AfEJ\B8\D8\DB\FCG]\F8\DEm\D0c\8A\F5\AD\C0\B2\1A\94L:Q\C9cV\D8\F5]\B9\B6\93\AC\B8\93\94\82\97\A4\0C\E1\C9\07\CD\F0\99\E9?M4\BAl\88\AA\15Q\0D\84B\D8\99L\B3\0Fd\1A\FF\94\8C\17\FB\B6y\C3\F9\09>\9A\EC\83!NOj\C3)\9C\B2DOB|\14N*\B3\B9\0D\D0M\0BTa\D1\88\06H\A9\DBQ#\D6\B0YJ\DD\11P\A9qt\98\85(\03\D9\84i\A0\16\DB%\B5\D0\A7\8F\CC\81K\BCP+\ACR \C2$\AEd\BDd\E6\8Cuu\BBM\06\BD\E9\A8T\F2\19\1Ak\A2\DB\C2k\1C\E9\10\A5\EAh\EA\A8\8D\AD\116\8D\8D;[j\BFWUx#U,\8D*\BCA\11\A7\98-\B3\18\D4 \0EC\D7\87D/\0B\E8\17F\93PO#\86SM[djeh\B3}\F5y\87\ED\8D*'s\DF\BE\09\BE\FE\DA}\03z~dv\BC\DFW\BB\A34\BB\C80j\C6\86T\C3\B2\EA\93\05I\CC&w\89\EC\EB`z\97\9C\02e\92t_\AF\94\06\B9\987\18\BCnV\B9\82\D9b*\ADZyg\BA\EB\8D\BCrA\C3n^_F\C7\C7\B2\97W\D2\E6\8F\F4(\E8{=J\87\BCu\9A\90\EANj\BB\B0\D7ijK\A5r\AF\19\AD\A6\814\ADF\C7ZM\83\A1\AE\81\E6c\BD\D6\04\F5\87\AD\96\E6\B7vv(T\DF\80\C9B\AF(Zw\89T\C2\85.\A4*\B1\FF4\A1\D0~Hs\16\F49\90\87l\EA\B5\F3\C5T*\9D6\F1{3\90\B1v\8F\CA9\D2;\D8e\DF\A1\8D\9E\1D>\B2c\CC\0E91X\C3\8E\9A$K\F2\00\C6\15\17\C6\C8\E7e\8A\03\FF\01n\065_\0B\B8W\CD\EC\94'\87M\14'I\C5o\AD\D9\BD\85w\22\AA\9E\BE\F1\E2\AA\97@\89B\F9c\A14\A6b)\7F\A8'\0D\1C\F5\A6_\D90*\0D\8C\17\C7x*[oi\88\A6\1D\E1\EE'_\B4\9D\BB0\A5\C1\00\E4\D25\F18\9D\E7l\84\9B\BC\CCv\8A\19X\8Dpa\E0s\94\AC\CB\A1\C1\86zjR(m`.z\F2\C6nH\80&P\17\D60\D0\14\EA\F4\DE\DB@aG\BE\1C\03[\E4%oAB\8B\F6\AE\85=!6N\0B\EB\F1\D6\1A\CFB\15\1A*VB\BFS~\A8\C1:\0D;\DA\C9Q!4\DFp\BF\1A\E5@{;\BFO\82\A6O\C7\BAd\7FH\CAx\CB\EB\B6S\90\0E\10~\83BI\C9\CB\8E\A4\86\8F\19\E1X#\B2\EB\C9\0E\93\9D\A8\DA0T?\17\EC\F7\A8\1C\12\F5\90\AA\93d\82\07q\B7\1F\F2\F0-\0A;<(I\97\07S\F6\14\1Ez\01\A6\E1\15\BB\F5\EC\1E\14_\FE\F2\F9v\97\1E\E0;\EF\DE\22D\C0\15\03:\97@\80\22_\93\D7\9D\8F\BE\0B\F8\EAt\AE\C9\17`\B4\17\D5\0A\E6\C0\0D\B9\87\17\98%\F8\A9\98\17\B9\B8#\7F\85\B3\8F\\\93\DCep\83G\0F\FA\04\8F+\12\0BQ\E5\C9A\F0\9A\DC\97\BB\BC\C4\ED\09\16Y\\\D4\FCAB$\E4\C2\01\09D\81O\E0\08.5\1B\FC\CA\82O\C8\A3\0A\A2L\D6N\04\BF\83]\\\E5\E2\83\BD\DE\95\C0e)`0\98F\DE\B8\91g\1A\D1V\0F\D7\AC\BC\89<o\BD\07I#\E7Qi#z&1\1BM\1C9s#\82a\EE*R\B6\F1\0F<\AA\E2r\03\0B\0A\AB\0FB\1DtNd7\81@\83y\80\1F\82\97\F5\AEZyGx\BF\E9\A0;G\CB\BA\16C\8B\14\C2\F1\95w3\1E\D9;9l\F79\A9\0B\01\A5\E0m\08c\8Dc\A9E\E4\8E\B0y|\FB6p\F0\0F\B8e=\F6\BDs\ECC\CC\C5\14t\C7\80N\0D \0BEn\BD/b\81\FDwM.AyE^\DE\8CY/\DB\F0p\F1\C9u\CA9F\19\0D\AE\19_\9Eg<\F2\1F\C3\B9\19\DB\EF5\D1r\DE\04\1A5\0F~\A3&\0A;|\D1\11\BELk\EA\F4\08\C3;g8\D1\12t|\CF\D2>U\C1\14Ut\A2=i\7F\A7\CB;\BC\0A5\EE\C0T\95I\B5\8B\D3u\0CM|\81\B4^vx\9D\AC\D9\EDP\84G+\FA\9AGe\D7\D5\D441<\15\03H\03\0D\C6\9CKT\D7\13^\F3Q \8B^\10\BC\B6S\FA\B4 \C8R8\B9\A9\DA\ED\DAa>;A8\B5\BE\A8`\D2dM\C0\9E5\11;C\00`\B4\BB\AF*(`\19\B0\1E\C0/kX\92\FBu\0C\E3\0B'L\D3\BE\FC6_\0BS\90\D7\EFw\B0\02ya\8C\99\EB\D1,\D8P/ \0D|Y\1D\D6\FC\C5%\E4\BD\22\AB\FB\F8\98\D7\C6~\B8!\97jJ\FD;I\1C92\19\9CQ\F2;\09~w\E5\EFW\D7\D2\02\0F\ED\C0<\133\B2\DB\08e\C8\B4=\91\0E\AD\F9\89\E3\9A\170\D01\C2G\1CZ\B4\F0C\1C\AARF8\19\C0\BC=\B5\AB\AAU\F6\\\A3\BF\A0\BD}\8C\1B\E1\12\0B\E8t\E6\89#v\DA\C8\F5!\C9pi\E62\CA(\A3\EC\B4\E1\F8Qd\D2\BDg\D8]\F1\B6a\18\EE\BCm,\1D\F72\D0h_1\B7\BFd\8C=z\C9\\vZ28\BA\C6\96\0C\B6L6 _\9FA\A3\E4\07\86A\9F\FC\E6\ACh\E7\19\F3:\E43W\92\DF?E\8DjOS\0D\EEWH'\C2b\DE\047\C3=\C7\16\8F\DCpz\D2\D2\B3\17\1D\D8\C4t\E4\9A\F3\F1Y\CB\FC'\0D[\16\90\E1\B4\95\FF\0A\C3&\86\\s{z\C4\15'\A2#\D7\8F\8FO\\\16\F6\C6\08\FE\CFF\13k\D4\C3u~\A3\A9\EB\D2n\C7\9C\19\BB\C6\18U\CC\B98\F0\\:\1E\\\0D\DE\88\8E\DC\AF\06\B3\97N^\B0\A6\86\AF\EB\F6XSWl\15k\DC\C3\1BL_\16>z\FC\BA\DD\1B\1D~\A7<y\FC\BA\CB\EE\E4tq\F2\B8\9D\FDv~r\BA~/\08N\0A\D7}R\10\ACC\EC*\8E\D1\B0\EF1\84w~\F8\8D\0F:yl\E1y\05o\0F\D6\83\E5\BC}\FE\E9g\9F\90O\BE|f\FD\E1\F9s\F5|\D1\F9\EF\CC\FF\03\CF\1C\BCo", operand_layouts = [dense<[1, 0]> : tensor<2xindex>], result_layouts = [dense<[1, 0]> : tensor<2xindex>]} : (tensor<8x4xf16>) -> tensor<8x4xf16> loc(#loc5)
    return %0 : tensor<8x4xf16> loc(#loc4)
  } loc(#loc4)
} loc(#loc)
#loc = loc(unknown)
#loc5 = loc("jit(f)/jit(main)/jit(softmax)/vmap(jit(wrapped))/pallas_call[name=batched_func in_shapes=(ShapeDtypeStruct(shape=(8, 4), dtype=float16),) out_shapes=(ShapeDtypeStruct(shape=(8, 4), dtype=float16),) which_linear=(False,) grid_mapping=GridMapping(grid=(8,), block_mappings=(BlockMapping(block_shape=(<jax._src.pallas.core.Mapped object at 0x7feab2c0cc70>, 4), index_map_jaxpr={ lambda ; a:i32[]. let  in (a, 0) }), BlockMapping(block_shape=(<jax._src.pallas.core.Mapped object at 0x7feab2c0cc70>, 4), index_map_jaxpr={ lambda ; a:i32[]. let  in (a, 0) })), mapped_dims=(0,), num_index_operands=0) input_output_aliases=() debug=False interpret=False num_warps=4 num_stages=1]"(#loc2))
""",
    mlir_module_serialized=b'ML\xefR\x01StableHLO_v0.9.0\x00\x01\x19\x05\x01\x03\x01\x03\x05\x03\t\x07\t\x0b\r\x03\x9d{\x0f\x01M\x0b\x07\x0f\x0f\x0b\x0b\x0b\x0b\x13\x0f\x0b+\x0b\x0f\x0b\x0b\x0b33\x0b\x0b3\x0bK\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0f\x0b\x13\x0f\x0b\x13\x03/\x0f\x0b\x0b\x0b\x0b\x0b\x0f\x0f\x13\x0b\x0b\x0f\x13\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0bO\x01\x05\x0b\x0f\x03\x0b\x17\x17\x07\x13\x07\x02\xa6\x03\x05\x0f\x1f\x1d\'\x11\x1d-\x11\x05\x11\x05\x13\x05\x15\x05\x17\x17)c\x01\x11\x03\x05\x05\x19\x03\t\x19\x1b\x1d\x13\x1f\x13\x01!\x05\x1b\x11\x01\x00\x05\x1d\x05\x1f\x05!\x03\x0b\t[\x0bO\rc\x01k\x0fm\x03\x0b\tM\x0bO\rM\x01Q\x0fS\x05#\x05%\x03\x0b\tM\x0bO\rM\x01U\x0fS\x05\'\x03\x111q3s5u7W9w;Y=W?Y\x05)\x05+\x05-\x05/\x051\x053\x055\x057\x1dC\x11\x059\x03\x03\x15U\x1dI\x03\x05;\x03\x03\x15Q\x03\x03o#\x07\x1d=\x1d?\x1dA\x03\x01\x03\x03y\x03\x03]\r\x03_a\x1dC\x1dE\x03\x03e\r\x03gi\x1dG\x1dI\x1dK\x1dM\r\x01\x0b\x05\x1dO\x1dQ\x05\x01\x1f\x0b!\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\t\x01\x02\x02)\x05!\x11\t\x11\x03\x05\x03\x05\x07)\x03\t\r\x13\x04\xa3\x05\x01\x11\x03\x17\x07\x03\x01\r\x03\x11\x03#\x07\x03\x05\x0b\x03\x05G\x07\x07\x05K\x03\x05\x03\x01\x05\x04\x03\x03\x03\x03\x11\x05%\x07\x03\x05\x0b\x03\x05\x05\x07\x07\x07E\x03\x05\x03\x01\x05\x04\x05\x03\x03\x03\x11\x07+\x07\x03\x05\x0b\x03\x05\x07\t\x07A/\x03\x05\x03\x01\x05\x04\x07\x03\x03\x06\x03\x01\x05\x01\x00\x929S\'\xd6 \x0f\x0b\x03!\x1b\x1d\x11\x11\x11\x05\x86\n\x1f/!!)#\x1f\x19\xf6\x02\x85\xc2\x02\r%)9\x0f\x1f\x15\x1d\x15\x13\x1f\x11\x15\x11\x0f\x0b\x11builtin\x00vhlo\x00module\x00func_v1\x00return_v1\x00call_v1\x00custom_call_v1\x00sym_name\x00arg_attrs\x00function_type\x00res_attrs\x00sym_visibility\x00callee\x00jax.uses_shape_polymorphism\x00mhlo.num_partitions\x00mhlo.num_replicas\x00jit_f\x00jit(f)/jit(main)/pjit[in_shardings=(UnspecifiedValue,) out_shardings=(UnspecifiedValue,) resource_env=None donated_invars=(False,) name=softmax keep_unused=False inline=False]\x00third_party/py/jax/tests/pallas/pallas_triton_back_compat_test.py\x00jit(f)/jit(main)/jit(softmax)/pjit[in_shardings=(UnspecifiedValue,) out_shardings=(UnspecifiedValue,) resource_env=None donated_invars=(False,) name=wrapped keep_unused=False inline=False]\x00api_version\x00backend_config\x00call_target_name\x00called_computations\x00has_side_effect\x00operand_layouts\x00output_operand_aliases\x00result_layouts\x00jit(f)/jit(main)/jit(softmax)/vmap(jit(wrapped))/pallas_call[name=batched_func in_shapes=(ShapeDtypeStruct(shape=(8, 4), dtype=float16),) out_shapes=(ShapeDtypeStruct(shape=(8, 4), dtype=float16),) which_linear=(False,) grid_mapping=GridMapping(grid=(8,), block_mappings=(BlockMapping(block_shape=(<jax._src.pallas.core.Mapped object at 0x7feab2c0cc70>, 4), index_map_jaxpr={ lambda ; a:i32[]. let  in (a, 0) }), BlockMapping(block_shape=(<jax._src.pallas.core.Mapped object at 0x7feab2c0cc70>, 4), index_map_jaxpr={ lambda ; a:i32[]. let  in (a, 0) })), mapped_dims=(0,), num_index_operands=0) input_output_aliases=() debug=False interpret=False num_warps=4 num_stages=1]\x00x\x00softmax\x00private\x00wrapped\x00mhlo.sharding\x00{replicated}\x00jax.result_info\x00\x00main\x00public\x00x\x9c\xbdY\xdd\x8e\xdb\xc6\x15F\n_DD/|\x99\x8b\x14\x98\x18]`7\x95i\xce\x90\x12\xc9\x8d\xbap\x0c\xd4\xbdq\x83^\x04F\x81 %Hq(\x13\xa1(\x85\x1cm\xb5Y,\xd0\x8b<G\xde\xa4/\x91\'\xea93Cj\xf8g\xed\x02A\x0c\x83\xbb<\xbf\xdf\xf9\xe6\xcc\x9c\xa1m\xfd\x1aZ\xff\x0b\xad?&\xb1X\x7f\xe0i\x94\x1d\xca\xf5\xf3g\x9f\xfd\xf7\xd9\x8b\x9f\xff\xf4\xea\x95\xf5\xea\x15\xf9;/y\x15\x0b\x9e\x92\xe4\x8e\xbc{\xf7\xfe\x1f\xe4\x9b\xf7\xff\xfc\xf6_\xe4M\xbc\xfe\xe1\xe5\xdf\xca\x14l,\xcb\xbe\xe5U\x9d\xefJ\x12\xd8\xd4\xb2E\\m\xb8 \xf56\xf2\x1d\xcb\x8e\xd3\xb4\xe2u\x1d\xd5\xf9O\x9c,=\xcb\x9aAT{S\xec\x92bf\xa6\xb5l~\x14\xbc*\x89]\x7f\x88+\xc8g\xc7E\xbe)\t%v\x12\x10\xb4\x8f\x8b\xa8\xde\xf2\xedw\xdf\x7f\x85\x19\xf3:O\nNl^\x8a\xea\x8e\x98\x91.\xad\x99\xbd\x8f\xabxK\xec\xc3\xd2\xeb\xa8")\x8f\x9c\xf9Y\x13j]Y\xf66>\x96"O\te\xc1\x9cP\xf8k\xdd\x83c\xc57\xc4\xde#\xc4\xd9\xc5~E\x9d\x9b\xaf\x1aaB\x97 \xab\xea\x15\xf5\r\xa1\xcbP\xb8b\xeeI\x96IY\xb6\n\r3\xc0\x01f\xe9\x8a\xa2\xdd\x9f\xdfE\nM\xc27y\xe9\\\x03mE\xaa K\xc4h\xe9\xce\xc9wc\xc5\x01?Cco\xdc\x98\xa2\xf1vwk\x1f\x14J\n\x85^@\xc9\xf6\x11\xe4q\x99J\xf4R\x11\x82B\xaa\xdd\xae\x07s@\xb1\x16\xb1\xf6\xa9?\x14M\xc5\x8c\xa2\x0b\xea\x19\xba\x1c\n\xfb?y\xca\xedZi\xd3\x85\xd4R\xa5\x85.\xb1k\ru\x89\n\xac\x0e\x8dLO\x9d1\xf5%\x94p\xe8)\x13j\x7f\xbf\x81\xa9\xd7\x84\xcd\xc9K\xea0O\x8b\x9b\xf5\xa3(6L\xc1\x12D\xce\xd1\x01\xd9kP\x13`R5\x9f\\\xdd{i@\x1e\x80MLB\xc9_\x88C\x90\xc3\xd7_\xa0q7\nfEJ\xb8\xd8\xdb\xfcG]\xf8\xdem\xd0c\x8a\xf5\xad\xc0\xb2\x1a\x94L:Q\xc9cV\xd8\xf5]\xb9\xb6\x93\xac\xb8\x93\x94\x82\x97\xa4\x0c\xe1\xc9\x07\xcd\xf0\x99\xe9?M4\xbal\x88\xaa\x15Q\r\x84B\xd8\x99L\xb3\x0fd\x1a\xff\x94\x8c\x17\xfb\xb6y\xc3\xf9\t>\x9a\xec\x83!NOj\xc3)\x9c\xb2DOB|\x14N*\xb3\xb9\r\xd0M\x0bTa\xd1\x88\x06H\xa9\xdbQ#\xd6\xb0YJ\xdd\x11P\xa9qt\x98\x85(\x03\xd9\x84i\xa0\x16\xdb%\xb5\xd0\xa7\x8f\xcc\x81K\xbcP+\xacR \xc2$\xaed\xbdd\xe6\x8cuu\xbbM\x06\xbd\xe9\xa8T\xf2\x19\x1ak\xa2\xdb\xc2k\x1c\xe9\x10\xa5\xeah\xea\xa8\x8d\xad\x116\x8d\x8d;[j\xbfWUx#U,\x8d*\xbcA\x11\xa7\x98-\xb3\x18\xd4 \x0eC\xd7\x87D/\x0b\xe8\x17F\x93PO#\x86SM[djeh\xb3}\xf5y\x87\xed\x8d*\'s\xdf\xbe\t\xbe\xfe\xda}\x03z~dv\xbc\xdfW\xbb\xa34\xbb\xc80j\xc6\x86T\xc3\xb2\xea\x93\x05I\xcc&w\x89\xec\xeb`z\x97\x9c\x02e\x92t_\xaf\x94\x06\xb9\x987\x18\xbcnV\xb9\x82\xd9b*\xadZyg\xba\xeb\x8d\xbcrA\xc3n^_F\xc7\xc7\xb2\x97W\xd2\xe6\x8f\xf4(\xe8{=J\x87\xbcu\x9a\x90\xeaNj\xbb\xb0\xd7ijK\xa5r\xaf\x19\xad\xa6\x814\xadF\xc7ZM\x83\xa1\xae\x81\xe6c\xbd\xd6\x04\xf5\x87\xad\x96\xe6\xb7vv(T\xdf\x80\xc9B\xaf(Zw\x89T\xc2\x85.\xa4*\xb1\xff4\xa1\xd0~Hs\x16\xf49\x90\x87l\xea\xb5\xf3\xc5T*\x9d6\xf1{3\x90\xb1v\x8f\xca9\xd2;\xd8e\xdf\xa1\x8d\x9e\x1d>\xb2c\xcc\x0e91X\xc3\x8e\x9a$K\xf2\x00\xc6\x15\x17\xc6\xc8\xe7e\x8a\x03\xff\x01n\x065_\x0b\xb8W\xcd\xec\x94\'\x87M\x14\'I\xc5o\xad\xd9\xbd\x85w"\xaa\x9e\xbe\xf1\xe2\xaa\x97@\x89B\xf9c\xa14\xa6b)\x7f\xa8\'\r\x1c\xf5\xa6_\xd90*\r\x8c\x17\xc7x*[oi\x88\xa6\x1d\xe1\xee\'_\xb4\x9d\xbb0\xa5\xc1\x00\xe4\xd25\xf18\x9d\xe7l\x84\x9b\xbc\xccv\x8a\x19X\x8dpa\xe0s\x94\xac\xcb\xa1\xc1\x86zjR(m`.z\xf2\xc6nH\x80&P\x17\xd60\xd0\x14\xea\xf4\xde\xdb@aG\xbe\x1c\x03[\xe4%oAB\x8b\xf6\xae\x85=!6N\x0b\xeb\xf1\xd6\x1a\xcfB\x15\x1a*VB\xbfS~\xa8\xc1:\r;\xda\xc9Q!4\xdfp\xbf\x1a\xe5@{;\xbfO\x82\xa6O\xc7\xbad\x7fH\xcax\xcb\xeb\xb6S\x90\x0e\x10~\x83BI\xc9\xcb\x8e\xa4\x86\x8f\x19\xe1X#\xb2\xeb\xc9\x0e\x93\x9d\xa8\xda0T?\x17\xec\xf7\xa8\x1c\x12\xf5\x90\xaa\x93d\x82\x07q\xb7\x1f\xf2\xf0-\n;<(I\x97\x07S\xf6\x14\x1ez\x01\xa6\xe1\x15\xbb\xf5\xec\x1e\x14_\xfe\xf2\xf9v\x97\x1e\xe0;\xef\xde"D\xc0\x15\x03:\x97@\x80"_\x93\xd7\x9d\x8f\xbe\x0b\xf8\xeat\xae\xc9\x17`\xb4\x17\xd5\n\xe6\xc0\r\xb9\x87\x17\x98%\xf8\xa9\x98\x17\xb9\xb8#\x7f\x85\xb3\x8f\\\x93\xdcep\x83G\x0f\xfa\x04\x8f+\x12\x0bQ\xe5\xc9A\xf0\x9a\xdc\x97\xbb\xbc\xc4\xed\t\x16Y\\\xd4\xfcAB$\xe4\xc2\x01\tD\x81O\xe0\x08.5\x1b\xfc\xca\x82O\xc8\xa3\n\xa2L\xd6N\x04\xbf\x83]\\\xe5\xe2\x83\xbd\xde\x95\xc0e)`0\x98F\xde\xb8\x91g\x1a\xd1V\x0f\xd7\xac\xbc\x89<o\xbd\x07I#\xe7Qi#z&1\x1bM\x1c9s#\x82a\xee*R\xb6\xf1\x0f<\xaa\xe2r\x03\x0b\n\xab\x0fB\x1dtNd7\x81@\x83y\x80\x1f\x82\x97\xf5\xaeZyGx\xbf\xe9\xa0;G\xcb\xba\x16C\x8b\x14\xc2\xf1\x95w3\x1e\xd9;9l\xf79\xa9\x0b\x01\xa5\xe0m\x08c\x8dc\xa9E\xe4\x8e\xb0y|\xfb6p\xf0\x0f\xb8e=\xf6\xbds\xecC\xcc\xc5\x14t\xc7\x80N\r \x0bEn\xbd/b\x81\xfdwM.AyE^\xde\x8cY/\xdb\xf0p\xf1\xc9u\xca9F\x19\r\xae\x19_\x9eg<\xf2\x1f\xc3\xb9\x19\xdb\xef5\xd1r\xde\x04\x1a5\x0f~\xa3&\n;|\xd1\x11\xbeLk\xea\xf4\x08\xc3;g8\xd1\x12t|\xcf\xd2>U\xc1\x14Ut\xa2=i\x7f\xa7\xcb;\xbc\n5\xee\xc0T\x95I\xb5\x8b\xd3u\x0cM|\x81\xb4^vx\x9d\xac\xd9\xedP\x84G+\xfa\x9aGe\xd7\xd5\xd441<\x15\x03H\x03\r\xc6\x9cKT\xd7\x13^\xf3Q \x8b^\x10\xbc\xb6S\xfa\xb4 \xc8R8\xb9\xa9\xda\xed\xdaa>;A8\xb5\xbe\xa8`\xd2dM\xc0\x9e5\x11;C\x00`\xb4\xbb\xaf*(`\x19\xb0\x1e\xc0/kX\x92\xfbu\x0c\xe3\x0b\'L\xd3\xbe\xfc6_\x0bS\x90\xd7\xefw\xb0\x02ya\x8c\x99\xeb\xd1,\xd8P/ \r|Y\x1d\xd6\xfc\xc5%\xe4\xbd"\xab\xfb\xf8\x98\xd7\xc6~\xb8!\x97jJ\xfd;I\x1c92\x19\x9cQ\xf2;\t~w\xe5\xefW\xd7\xd2\x02\x0f\xed\xc0<\x133\xb2\xdb\x08e\xc8\xb4=\x91\x0e\xad\xf9\x89\xe3\x9a\x170\xd01\xc2G\x1cZ\xb4\xf0C\x1c\xaaRF8\x19\xc0\xbc=\xb5\xab\xaaU\xf6\\\xa3\xbf\xa0\xbd}\x8c\x1b\xe1\x12\x0b\xe8t\xe6\x89#v\xda\xc8\xf5!\xc9pi\xe62\xca(\xa3\xec\xb4\xe1\xf8Qd\xd2\xbdg\xd8]\xf1\xb6a\x18\xee\xbcm,\x1d\xf72\xd0h_1\xb7\xbfd\x8c=z\xc9\\vZ28\xba\xc6\x96\x0c\xb6L6 _\x9fA\xa3\xe4\x07\x86A\x9f\xfc\xe6\xach\xe7\x19\xf3:\xe43W\x92\xdf?E\x8djOS\r\xeeWH\'\xc2b\xde\x047\xc3=\xc7\x16\x8f\xdcpz\xd2\xd2\xb3\x17\x1d\xd8\xc4t\xe4\x9a\xf3\xf1Y\xcb\xfc\'\r[\x16\x90\xe1\xb4\x95\xff\n\xc3&\x86\\s{z\xc4\x15\'\xa2#\xd7\x8f\x8fO\\\x16\xf6\xc6\x08\xfe\xcfF\x13k\xd4\xc3u~\xa3\xa9\xeb\xd2n\xc7\x9c\x19\xbb\xc6\x18U\xcc\xb98\xf0\\:\x1e\\\r\xde\x88\x8e\xdc\xaf\x06\xb3\x97N^\xb0\xa6\x86\xaf\xeb\xf6XSWl\x15k\xdc\xc3\x1bL_\x16>z\xfc\xba\xdd\x1b\x1d~\xa7<y\xfc\xba\xcb\xee\xe4tq\xf2\xb8\x9d\xfdv~r\xba~/\x08N\n\xd7}R\x10\xacC\xec*\x8e\xd1\xb0\xef1\x84w~\xf8\x8d\x0f:yl\xe1y\x05o\x0f\xd6\x83\xe5\xbc}\xfe\xe9g\x9f\x90O\xbe|f\xfd\xe1\xf9s\xf5|\xd1\xf9\xef\xcc\xff\x03\xcf\x1c\xbco\x00triton_kernel_call\x00',
    xla_call_module_version=7,
)  # End paste
