# Copyright 2018 The JAX Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from jax._src.interpreters.pxla import (
  AUTO as AUTO,
  ArrayMapping as ArrayMapping,
  ArrayMappingOrAutoOrUnspecified as ArrayMappingOrAutoOrUnspecified,
  AvalDimSharding as AvalDimSharding,
  Chunked as Chunked,
  ConcreteArray as ConcreteArray,
  ContextDecorator as ContextDecorator,
  DynamicAxisEnv as DynamicAxisEnv,
  DynamicAxisEnvFrame as DynamicAxisEnvFrame,
  EMPTY_ENV as EMPTY_ENV,
  EmapInfo as EmapInfo,
  ExecuteReplicated as ExecuteReplicated,
  HashableFunction as HashableFunction,
  Index as Index,
  InputsHandler as InputsHandler,
  JAXTypeError as JAXTypeError,
  MapTrace as MapTrace,
  MapTracer as MapTracer,
  Mesh as Mesh,
  MeshAxisName as MeshAxisName,
  MeshComputation as MeshComputation,
  MeshDimAssignment as MeshDimAssignment,
  MeshExecutable as MeshExecutable,
  NoSharding as NoSharding,
  OpShardingType as OpShardingType,
  OrderedDictType as OrderedDictType,
  OutputType as OutputType,
  ParallelCallableInfo as ParallelCallableInfo,
  PartitionInfo as PartitionInfo,
  PartitionSpec as PartitionSpec,
  PartitionsOrReplicated as PartitionsOrReplicated,
  PmapComputation as PmapComputation,
  PmapExecutable as PmapExecutable,
  PxlaResultHandler as PxlaResultHandler,
  ReplicaInfo as ReplicaInfo,
  Replicated as Replicated,
  ResourceAxisName as ResourceAxisName,
  ResourceEnv as ResourceEnv,
  ResultsHandler as ResultsHandler,
  SPMDBatchTrace as SPMDBatchTrace,
  ShapedArray as ShapedArray,
  ShardInfo as ShardInfo,
  ShardedAxis as ShardedAxis,
  ShardedDeviceArray as ShardedDeviceArray,
  ShardedDeviceArrayBase as ShardedDeviceArrayBase,
  ShardingSpec as ShardingSpec,
  TileManual as TileManual,
  TileVectorize as TileVectorize,
  TilingMethod as TilingMethod,
  UnloadedMeshExecutable as UnloadedMeshExecutable,
  UnloadedPmapExecutable as UnloadedPmapExecutable,
  Unstacked as Unstacked,
  WeakRefList as WeakRefList,
  _AUTOAxisResource as _AUTOAxisResource,
  _FakePrimitive as _FakePrimitive,
  _Loop as _Loop,
  _MeshExecutableFastpathData as _MeshExecutableFastpathData,
  _PSThreadLocalState as _PSThreadLocalState,
  _PositionalSemantics as _PositionalSemantics,
  _SDA_BASE_CLASS as _SDA_BASE_CLASS,
  _ShardedDeviceArray as _ShardedDeviceArray,
  _ThreadLocalState as _ThreadLocalState,
  _ThreadResourcesLocalState as _ThreadResourcesLocalState,
  _UNSHARDED_INSTANCE as _UNSHARDED_INSTANCE,
  _UNSPECIFIED as _UNSPECIFIED,
  _USE_CPP_SDA as _USE_CPP_SDA,
  _UnspecifiedValue as _UnspecifiedValue,
  _annot_to_flat as _annot_to_flat,
  _as_slice_indices as _as_slice_indices,
  _check_device_backend_on_shardings as _check_device_backend_on_shardings,
  _check_gda_or_array_xla_sharding_match as _check_gda_or_array_xla_sharding_match,
  _check_if_any_auto as _check_if_any_auto,
  _compile_replicated_mesh_executable_from_hlo as _compile_replicated_mesh_executable_from_hlo,
  _compile_replicated_mesh_executable_from_trivial_jaxpr as _compile_replicated_mesh_executable_from_trivial_jaxpr,
  _compile_replicated_pmap_executable_from_hlo as _compile_replicated_pmap_executable_from_hlo,
  _create_mesh_pspec_sharding as _create_mesh_pspec_sharding,
  _create_pmap_sharding_spec as _create_pmap_sharding_spec,
  _emap_impl as _emap_impl,
  _execute_trivial as _execute_trivial,
  _find_partitions as _find_partitions,
  _forbidden_primitives as _forbidden_primitives,
  _full_to_shard_abstract_eval as _full_to_shard_abstract_eval,
  _full_to_shard_lowering as _full_to_shard_lowering,
  _get_and_check_device_assignment as _get_and_check_device_assignment,
  _get_array_mapping as _get_array_mapping,
  _get_input_indices as _get_input_indices,
  _get_input_metadata as _get_input_metadata,
  _get_logical_mesh_ids as _get_logical_mesh_ids,
  _get_mesh_pspec_shardings_from_executable as _get_mesh_pspec_shardings_from_executable,
  _get_normalized_avals_and_shardings as _get_normalized_avals_and_shardings,
  _get_num_ways_dim_sharded as _get_num_ways_dim_sharded,
  _get_op_sharding_shardings_from_executable as _get_op_sharding_shardings_from_executable,
  _get_pmap_sharding as _get_pmap_sharding,
  _get_sharding_specs as _get_sharding_specs,
  _hashable_index as _hashable_index,
  _hlo_shard as _hlo_shard,
  _hlo_unshard as _hlo_unshard,
  _inner_partitions as _inner_partitions,
  _is_auto as _is_auto,
  _is_unspecified as _is_unspecified,
  _make_sharding_spec as _make_sharding_spec,
  _manual_proto as _manual_proto,
  _map_schedule as _map_schedule,
  _masked_array_error as _masked_array_error,
  _match_annot as _match_annot,
  _moveaxis as _moveaxis,
  _multi_pmap as _multi_pmap,
  _one_replica_buffer_indices as _one_replica_buffer_indices,
  _op_sharding_to_numpy_indices as _op_sharding_to_numpy_indices,
  _out_shardings_for_trivial as _out_shardings_for_trivial,
  _pmap_axis_subst as _pmap_axis_subst,
  _pmap_dce_rule as _pmap_dce_rule,
  _pmap_lowering as _pmap_lowering,
  _pmap_partial_eval_custom_params_updater as _pmap_partial_eval_custom_params_updater,
  _pmap_partial_eval_custom_res_maker as _pmap_partial_eval_custom_res_maker,
  _pmap_sharding_spec as _pmap_sharding_spec,
  _positional_semantics as _positional_semantics,
  _register_handlers_for_sharded_device_array as _register_handlers_for_sharded_device_array,
  _safe_div as _safe_div,
  _sanitize_mesh_jaxpr as _sanitize_mesh_jaxpr,
  _sda__iter__ as _sda__iter__,
  _sda__reversed__ as _sda__reversed__,
  _shard_abstract_array as _shard_abstract_array,
  _shard_arg as _shard_arg,
  _shard_array as _shard_array,
  _shard_device_array as _shard_device_array,
  _shard_sharded_device_array_slow_path as _shard_sharded_device_array_slow_path,
  _shard_to_full_abstract_eval as _shard_to_full_abstract_eval,
  _shard_to_full_lowering as _shard_to_full_lowering,
  _shard_token as _shard_token,
  _sharded_device_array_mlir_constant_handler as _sharded_device_array_mlir_constant_handler,
  _shardings_to_mlir_shardings as _shardings_to_mlir_shardings,
  _t as _t,
  _thread_local_state as _thread_local_state,
  _unravel_index_hlo as _unravel_index_hlo,
  abstract_arrays as abstract_arrays,
  ad as ad,
  annotations as annotations,
  api_util as api_util,
  are_op_shardings_equal as are_op_shardings_equal,
  array_mapping_to_axis_resources as array_mapping_to_axis_resources,
  array_types as array_types,
  assert_unreachable as assert_unreachable,
  basearray as basearray,
  batching as batching,
  cached_property as cached_property,
  check_multihost_collective_allowlist as check_multihost_collective_allowlist,
  config as config,
  contextmanager as contextmanager,
  core as core,
  custom_resource_typing_rules as custom_resource_typing_rules,
  dataclasses as dataclasses,
  defaultdict as defaultdict,
  device_array as device_array,
  device_put as device_put,
  dispatch as dispatch,
  distributed_debug_log as distributed_debug_log,
  dtypes as dtypes,
  enum as enum,
  find_partitions as find_partitions,
  find_replicas as find_replicas,
  flags as flags,
  full_to_shard_p as full_to_shard_p,
  get_global_aval as get_global_aval,
  get_local_aval as get_local_aval,
  get_num_partitions as get_num_partitions,
  global_aval_to_result_handler as global_aval_to_result_handler,
  global_avals_to_results_handler as global_avals_to_results_handler,
  global_result_handlers as global_result_handlers,
  hlo as hlo,
  identity as identity,
  ir as ir,
  is_op_sharding_replicated as is_op_sharding_replicated,
  it as it,
  jax as jax,
  local_aval_to_result_handler as local_aval_to_result_handler,
  local_avals_to_results_handler as local_avals_to_results_handler,
  local_result_handlers as local_result_handlers,
  logger as logger,
  logging as logging,
  lower_mesh_computation as lower_mesh_computation,
  lower_parallel_callable as lower_parallel_callable,
  lower_sharding_computation as lower_sharding_computation,
  lru_cache as lru_cache,
  lu as lu,
  make_sharded_device_array as make_sharded_device_array,
  map as map,
  maybe_extend_axis_env as maybe_extend_axis_env,
  mesh_sharding_specs as mesh_sharding_specs,
  mlir as mlir,
  multi_host_supported_collectives as multi_host_supported_collectives,
  namedtuple as namedtuple,
  new_mesh_sharding_specs as new_mesh_sharding_specs,
  new_name_stack as new_name_stack,
  np as np,
  op as op,
  op_sharding_to_indices as op_sharding_to_indices,
  parallel_callable as parallel_callable,
  partial as partial,
  partition_list as partition_list,
  partitioned_sharding_spec as partitioned_sharding_spec,
  pe as pe,
  pmap_lib as pmap_lib,
  prod as prod,
  profiler as profiler,
  reconcile_num_partitions as reconcile_num_partitions,
  replicate as replicate,
  resource_typecheck as resource_typecheck,
  safe_map as safe_map,
  safe_zip as safe_zip,
  sda as sda,
  sda_array_result_handler as sda_array_result_handler,
  shard_arg_handlers as shard_arg_handlers,
  shard_args as shard_args,
  shard_aval as shard_aval,
  shard_aval_handlers as shard_aval_handlers,
  shard_to_full_p as shard_to_full_p,
  sharding_internal as sharding_internal,
  sharding_spec_sharding_proto as sharding_spec_sharding_proto,
  show_axes as show_axes,
  source_info_util as source_info_util,
  spec_to_indices as spec_to_indices,
  spmd_primitive_batchers as spmd_primitive_batchers,
  stage_parallel_callable as stage_parallel_callable,
  stages as stages,
  sys as sys,
  t as t,
  thread_resources as thread_resources,
  threading as threading,
  tile_aval_nd as tile_aval_nd,
  tree_flatten as tree_flatten,
  tree_map as tree_map,
  tuple_delete as tuple_delete,
  tuple_insert as tuple_insert,
  unsafe_map as unsafe_map,
  untile_aval_nd as untile_aval_nd,
  unzip2 as unzip2,
  unzip3 as unzip3,
  util as util,
  vtile_by_mesh as vtile_by_mesh,
  vtile_manual as vtile_manual,
  wrap_name as wrap_name,
  xb as xb,
  xc as xc,
  xe as xe,
  xla as xla,
  xla_extension_version as xla_extension_version,
  xla_pmap as xla_pmap,
  xla_pmap_impl as xla_pmap_impl,
  xla_pmap_impl_lazy as xla_pmap_impl_lazy,
  xla_pmap_p as xla_pmap_p,
)
